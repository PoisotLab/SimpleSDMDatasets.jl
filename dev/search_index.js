var documenterSearchIndex = {"docs":
[{"location":"usr/CHELSA2.html#CHELSA2","page":"CHELSA (version 2)","title":"CHELSA2","text":"","category":"section"},{"location":"usr/CHELSA2.html#AverageTemperature","page":"CHELSA (version 2)","title":"AverageTemperature","text":"","category":"section"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA2, AverageTemperature})","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP126 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP370 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP585 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html#BioClim","page":"CHELSA (version 2)","title":"BioClim","text":"","category":"section"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Support for layers - list with SimpleSDMDatasets.layers(RasterData{CHELSA2, BioClim})","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP126 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP370 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP585 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html#MaximumTemperature","page":"CHELSA (version 2)","title":"MaximumTemperature","text":"","category":"section"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA2, MaximumTemperature})","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP126 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP370 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP585 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html#MinimumTemperature","page":"CHELSA (version 2)","title":"MinimumTemperature","text":"","category":"section"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA2, MinimumTemperature})","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP126 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP370 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP585 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html#Precipitation","page":"CHELSA (version 2)","title":"Precipitation","text":"","category":"section"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA2, Precipitation})","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP126 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP370 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/CHELSA2.html","page":"CHELSA (version 2)","title":"CHELSA (version 2)","text":"Future scenario SSP585 supported with models GFDL_ESM4, IPSL_CM6A_LR, MPI_ESM1_2_HR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html#WorldClim2","page":"WorldClim (version 2)","title":"WorldClim2","text":"","category":"section"},{"location":"usr/WorldClim2.html#AverageTemperature","page":"WorldClim (version 2)","title":"AverageTemperature","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, AverageTemperature})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, AverageTemperature})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html#BioClim","page":"WorldClim (version 2)","title":"BioClim","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for layers - list with SimpleSDMDatasets.layers(RasterData{WorldClim2, BioClim})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, BioClim})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP126 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP245 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP370 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP585 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html#Elevation","page":"WorldClim (version 2)","title":"Elevation","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, Elevation})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html#MaximumTemperature","page":"WorldClim (version 2)","title":"MaximumTemperature","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, MaximumTemperature})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, MaximumTemperature})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP126 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP245 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP370 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP585 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html#MinimumTemperature","page":"WorldClim (version 2)","title":"MinimumTemperature","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, MinimumTemperature})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, MinimumTemperature})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP126 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP245 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP370 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP585 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html#Precipitation","page":"WorldClim (version 2)","title":"Precipitation","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, Precipitation})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, Precipitation})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP126 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP245 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP370 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, GFDL_ESM4, GISS_E2_1_G, GISS_E2_1_H, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Future scenario SSP585 supported with models ACCESS_CM2, ACCESS_ESM1_5, BCC_CSM2_MR, CMCC_ESM2, CNRM_CM6_1, CNRM_CM6_1_HR, CNRM_ESM2_1, CanESM5, CanESM5_CanOE, EC_Earth3_Veg, EC_Earth3_Veg_LR, FIO_ESM_2_0, GISS_E2_1_G, GISS_E2_1_H, HadGEM3_GC31_LL, INM_CM4_8, INM_CM5_0, IPSL_CM6A_LR, MIROC6, MIROC_ES2L, MPI_ESM1_2_HR, MPI_ESM1_2_LR, MRI_ESM2_0 and UKESM1_0_LL","category":"page"},{"location":"usr/WorldClim2.html#SolarRadiation","page":"WorldClim (version 2)","title":"SolarRadiation","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, SolarRadiation})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, SolarRadiation})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html#WaterVaporPressure","page":"WorldClim (version 2)","title":"WaterVaporPressure","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, WaterVaporPressure})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, WaterVaporPressure})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"usr/WorldClim2.html#WindSpeed","page":"WorldClim (version 2)","title":"WindSpeed","text":"","category":"section"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{WorldClim2, WindSpeed})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{WorldClim2, WindSpeed})","category":"page"},{"location":"usr/WorldClim2.html","page":"WorldClim (version 2)","title":"WorldClim (version 2)","text":"Downloaded as _zip, data stored as _tiff","category":"page"},{"location":"dev/interface.html#The-dataset-interface","page":"Interface","title":"The dataset interface","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"This page is meant for contributors to the package, and specifically provides information on the interface, what to overload, and why.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"All of the methods that form the interface have two versions: one for current data, and one for future data. The default behavior of the interface is for the version on future data to fall back to the version for current data (i.e. we assume that future data are provided with the same format as current data). This means that most of the functions will not need to be overloaded when adding a provider with support for future data.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"The interface is built around the idea that Julia will use the most specific version of a method first, and resort to the less generic ones when there are multiple matches. A good example is the BioClim dataset, provided by a number of sources, that often has different URLs and filenames. This is handled (in e.g. CHELSA2) by writing a method for the general case of any dataset RasterData{CHELSA2,T} (using a Union type), and then a specific method on RasterData{CHELSA2,BioClim}. In the case of CHELSA2, the general method handles all datasets except BioClim, which makes the code much easier to write and maintain.","category":"page"},{"location":"dev/interface.html#Compatibility-between-datasets-and-providers","page":"Interface","title":"Compatibility between datasets and providers","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"The inner constructor for RasterData involves a call to provides, which must return true for the type to be constructed. The generic method for provides returns false, so additional provider/dataset pairs must be overloaded to return true in order for the corresponding RasterData type to exist.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"In practice, especially when there are multiple datasets for a single provider, the easiest way is to define a Union type and overload based on membership to this union type, as touched upon earlier in this document.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.provides","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.provides","page":"Interface","title":"SimpleSDMDatasets.provides","text":"provides(::Type{P}, ::Type{D}) where {P <: RasterProvider, D <: RasterDataset}\n\nThis is the core function upon which the entire interface is built. Its purpose is to specify whether a specific dataset is provided by a specific provider. Note that this function takes two arguments, as opposed to a RasterData argument, because it is called in the inner constructor of RasterData: you cannot instantiate a RasterData with an incompatible provider/dataset combination.\n\nThe default value of this function is false, and to allow the use of a dataset with a provider, it is required to overload it for this specific pair so that it returns true.\n\n\n\n\n\nprovides(::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method for provides specifies whether a RasterData combination has support for the value of the Future (a combination of a FutureScenario and a FutureModel) given as the second argument. Note that this function is not called as part of the Future constructor (because models and scenarios are messy and dataset dependent), but is still called when requesting data.\n\nThe default value of this function is false, and to allow the use of a future dataset with a given provider, it is required to overload it so that it returns true.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#Type-of-object-downloaded","page":"Interface","title":"Type of object downloaded","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"The specification about the format of downloaded files is managed by downloadtype. By default, we assume that a request to a usable dataset is returning a single file, but this can be overloaded for the providers who return an archive.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.downloadtype","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.downloadtype","page":"Interface","title":"SimpleSDMDatasets.downloadtype","text":"downloadtype(::R) where {R <: RasterData}\n\nThis method returns a RasterDownloadType that is used internally to be more explicit about the type of object that is downloaded from the raster source. The supported values are _file (the default, which is an ascii, geotiff, NetCDF, etc. single file), and _zip (a zip archive containing files). This is a trait because we cannot trust file extensions.\n\n\n\n\n\ndownloadtype(data::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method provides the type of the downloaded object for a combination of a raster source and a future scenario as a RasterDownloadType.\n\nIf no overload is given, this will default to downloadtype(data), as we can assume that the type of downloaded object is the same for both current and future scenarios.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"The return type of the downloadtype must be one of the RasterDownloadType enum, which can be extended if adding a new provider requires a new format for the download.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.RasterDownloadType","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.RasterDownloadType","page":"Interface","title":"SimpleSDMDatasets.RasterDownloadType","text":"RasterDownloadType\n\nThis enum stores the possible types of downloaded files. They are listed with instances(RasterDownloadType), and are currently limited to _file (a file, can be read directly) and _zip (an archive, must be unzipped).\n\n\n\n\n\n","category":"type"},{"location":"dev/interface.html#Type-of-object-stored","page":"Interface","title":"Type of object stored","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"The specification about the format of the information contained in the downloaded type is managed by filetype. By default, we assume that a request to a usable dataset is returning a tiff, but this can be overloaded for the providers who return data in another format. Note that if the download type is an archive, the file type describes the format of the files within the archive.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.filetype","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.filetype","page":"Interface","title":"SimpleSDMDatasets.filetype","text":"filetype(::R) where {R <: RasterData}\n\nThis method returns a RasterFileType that represents the format of the raster data. RasterFileType is an enumerated type. This overload is particularly important as it will determine how the returned file path should be read.\n\nThe default value is _tiff.\n\n\n\n\n\nfiletype(data::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method provides the format of the stored raster for a combination of a raster source and a future scenario as a RasterFileType.\n\nIf no overload is given, this will default to filetype(data), as we can assume that the raster format is the same for both current and future scenarios.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"The return type of the filetype must be one of the RasterFileType enum, which can be extended if adding a new provider requires a new format for the download.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.RasterFileType","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.RasterFileType","page":"Interface","title":"SimpleSDMDatasets.RasterFileType","text":"RasterFileType\n\nThis enum stores the possible types of returned files. They are listed with instances(RasterFileType).\n\n\n\n\n\n","category":"type"},{"location":"dev/interface.html#Available-resolutions","page":"Interface","title":"Available resolutions","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.resolutions","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.resolutions","page":"Interface","title":"SimpleSDMDatasets.resolutions","text":"resolutions(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has a resolution, i.e. a grid size. If this is nothing (the default), it means that the dataset is only given at a set resolution.\n\nAn overload of this method is required when there are multiple resolutions available, and must return a Dict with numeric keys (for the resolution) and string values (giving the textual representation of these keys, usually in the way that is usable to build the url).\n\nAny dataset with a return value that is not nothing must accept the resolution keyword.\n\n\n\n\n\nresolutions(data::R, ::F) where {R <: RasterData, F <: Future}\n\nThis methods control the resolutions for a future dataset. Unless overloaded, it will return resolutions(data).\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#Available-layers","page":"Interface","title":"Available layers","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.layers\nSimpleSDMDatasets.layerdescriptions","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.layers","page":"Interface","title":"SimpleSDMDatasets.layers","text":"layers(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has named layers. If this is nothing (the default), it means that the dataset will have a single layer.\n\nAn overload of this method is required when there are multiple layers available, and must return a Vector, usually of String. Note that by default, the layers can also be accessed by using an Integer, in which case layer=i will be the i-th entry in layers(data).\n\nAny dataset with a return value that is not nothing must accept the layer keyword.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#SimpleSDMDatasets.layerdescriptions","page":"Interface","title":"SimpleSDMDatasets.layerdescriptions","text":"layerdescriptions(data::R) where {R <: RasterData}\n\nHuman-readable names the layers. This will by default print the value of layers, but can be overloaded if these names are not informative.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#Available-months","page":"Interface","title":"Available months","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.months","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.months","page":"Interface","title":"SimpleSDMDatasets.months","text":"months(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has monthly layers. If this is nothing (the default), it means that the dataset is not accessible at a monthly resolution.\n\nAn overload of this method is required when there are multiple months available, and must return a Vector{Dates.Month}.\n\nAny dataset with a return value that is not nothing must accept the month keyword.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#Available-years","page":"Interface","title":"Available years","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.timespans","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.timespans","page":"Interface","title":"SimpleSDMDatasets.timespans","text":"timespans(data::R, ::F) where {R <: RasterData, F <: Future}\n\nFor datasets with a Future scenario, this method should return a Vector of Pairs, which are formatted as\n\nYear(start) => Year(end)\n\nThere is a method working on a single RasterData argument, defaulting to returning nothing, but it should never be overloaded.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#Additional-keyword-arguments","page":"Interface","title":"Additional keyword arguments","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.extrakeys","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.extrakeys","page":"Interface","title":"SimpleSDMDatasets.extrakeys","text":"extrakeys(::R) where {R <: RasterData}\n\nThis method controls whether the dataset has additional keys. If this is nothing (the default), it means that the dataset can be accessed using only the default keys specified in this interface.\n\nAn overload of this method is required when there are additional keywords needed to access the data (e.g. full=true for the EarthEnv land-cover data), and must return a Dict, with Symbol keys and Tuple arguments, where the key is the keyword argument passed to downloader and the tuple lists all accepted values.\n\nAny dataset with a return value that is not nothing must accept the keyword arguments specified in the return value.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#URL-for-the-data-to-download","page":"Interface","title":"URL for the data to download","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.source","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.source","page":"Interface","title":"SimpleSDMDatasets.source","text":"source(::RasterData{P, D}; kwargs...) where {P <: RasterProvider, D <: RasterDataset}\n\nThis method specifies the URL for the data. It defaults to nothing, so this method must be overloaded.\n\n\n\n\n\n","category":"function"},{"location":"dev/interface.html#Path-to-the-data-locally","page":"Interface","title":"Path to the data locally","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.destination","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.destination","page":"Interface","title":"SimpleSDMDatasets.destination","text":"destination(::RasterData{P, D}; kwargs...) where {P <: RasterProvider, D <: RasterDataset}\n\nThis method specifies where the data should be stored locally. By default, it is the _LAYER_PATH, followed by the provider name, followed by the dataset name.\n\n\n\n\n\n","category":"function"},{"location":"usr/getdata.html#Getting-data","page":"Retrieving data","title":"Getting data","text":"","category":"section"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The point of this package is to be simple; if you want to get the data for the CHELSA dataset, specifically the BIO8 BioClim variable, in the years 2041 to 2070, under SSP126 according to the UKESM1-0-LL model, you really only need two things.","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The first is a description of the dataset to query, which is simply:","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"data = RasterData(CHELSA2, BioClim)","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The second is a description of the scenario for which you want this data:","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"future = Future(SSP126, UKESM1_0_LL)","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"Why? The package relies on a series of checks to make sure that you only query the files that exist, and there are various places in the package where this is checked (the very first is when calling RasterData, in fact).","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The range of years to be queried is given by the timespan argument, which is a Pair of Years (so you will need to load Dates):","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"using Dates\nts = Year(2041) => Year(2070)","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The BioClim variable BIO8 is called a layer; you can use SimpleSDMDatasets.layers(data, future) to see the list of possible layers. We can use the string \"BIO8\" directly.","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"To get the data themselves, the one function to call is downloader:","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"downloader(data, future; timespan=ts, layer=\"BIO8\")","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"Calling this function will first start a series of checks, in order to avoid requesting data that do not exist. Should these checks fail, they will do so with an informative error message (for example, if some keywords arguments are given that are not relevant). The next step is to download the data, and store them in a central location.","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The central location is determined when loading the package, and will default to a sub-folder within your Julia folder (the DEPOT_PATH), or your home directory if there is no DEPOT_PATH. This can also be over-ruled by giving a SDMLAYERS_PATH environmental variable (if it points to a directory that does not exist, the package will create it).","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The dataset you requested will then be downloaded, named, and the downloader function will return a Tuple with three elements:","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"(\n    \"/some/absolute/path/to/data/CHELSA2/BioClim/SSP126/UKESM1-0-LL/chelsa_bio8_2041-2070_ukesm1-0-ll_ssp126_v.2.1.tif\",\n    SimpleSDMDatasets._tiff, \n    1\n)","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"The first element of this tuple points to the file. The second element is the type of the file, according to the RasterFileType enum, which will let you know how to read this file. The last element is the band number to read (this defaults to 1, even if there is a single band in the raster).","category":"page"},{"location":"usr/getdata.html","page":"Retrieving data","title":"Retrieving data","text":"That's it. This package is not reading the data, it is managing and retrieving them for you. Next time you will request the same data, by calling the same downloader function, they will already be downloaded, and ready to use.","category":"page"},{"location":"dev/types.html#Type-system-for-datasets","page":"Type system","title":"Type system for datasets","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"Note that all datasets must be a direct subtype of RasterDataset, all providers must be a direct subtype of RasterProvider, all scenarios must be a direct subtype of FutureScenario, and all models must be a direct subtype of FutureModel. If you need to aggregate multiple models within a type (e.g. CMIP6Scenarios), use a Union type. The reason for this convention is that in interactive mode, subtype will let users pick the data combination they want.","category":"page"},{"location":"dev/types.html#Type-system-overview","page":"Type system","title":"Type system overview","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"RasterData\nRasterDataset\nRasterProvider","category":"page"},{"location":"dev/types.html#SimpleSDMDatasets.RasterData","page":"Type system","title":"SimpleSDMDatasets.RasterData","text":"RasterData{P <: RasterProvider, D <: RasterDataset}\n\nThe RasterData type is the main user-facing type for SimpleSDMDatasets. Specifically, this is a singleton parametric type, where the two parameters are the type of the RasterProvider and the RasterDataset. Note that the inner constructor calls the provides method on the provider/dataset pair to check that this combination exists.\n\n\n\n\n\n","category":"type"},{"location":"dev/types.html#SimpleSDMDatasets.RasterDataset","page":"Type system","title":"SimpleSDMDatasets.RasterDataset","text":"RasterDataset\n\nThis is an abstract type to label something as being a dataset. Datasets are given by RasterProviders, and the same dataset can have multiple providers.\n\n\n\n\n\n","category":"type"},{"location":"dev/types.html#SimpleSDMDatasets.RasterProvider","page":"Type system","title":"SimpleSDMDatasets.RasterProvider","text":"RasterProvider\n\nThis is an abstract type to label something as a provider of RasterDatasets. For example, WorldClim2 and CHELSA2 are RasterProviders.\n\n\n\n\n\n","category":"type"},{"location":"dev/types.html#List-of-datasets","page":"Type system","title":"List of datasets","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"BioClim\nElevation\nMinimumTemperature\nMaximumTemperature\nAverageTemperature\nPrecipitation\nSolarRadiation\nWindSpeed\nWaterVaporPressure\nLandCover\nHabitatHeterogeneity\nTopography","category":"page"},{"location":"dev/types.html#List-of-providers","page":"Type system","title":"List of providers","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"WorldClim2\nEarthEnv\nCHELSA1\nCHELSA2","category":"page"},{"location":"dev/types.html#List-of-enumerated-types","page":"Type system","title":"List of enumerated types","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"SimpleSDMDatasets.RasterDownloadType\nSimpleSDMDatasets.RasterFileType","category":"page"},{"location":"usr/CHELSA1.html#CHELSA1","page":"CHELSA (version 1)","title":"CHELSA1","text":"","category":"section"},{"location":"usr/CHELSA1.html#AverageTemperature","page":"CHELSA (version 1)","title":"AverageTemperature","text":"","category":"section"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA1, AverageTemperature})","category":"page"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA1.html#BioClim","page":"CHELSA (version 1)","title":"BioClim","text":"","category":"section"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Support for layers - list with SimpleSDMDatasets.layers(RasterData{CHELSA1, BioClim})","category":"page"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA1.html#MaximumTemperature","page":"CHELSA (version 1)","title":"MaximumTemperature","text":"","category":"section"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA1, MaximumTemperature})","category":"page"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA1.html#MinimumTemperature","page":"CHELSA (version 1)","title":"MinimumTemperature","text":"","category":"section"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA1, MinimumTemperature})","category":"page"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/CHELSA1.html#Precipitation","page":"CHELSA (version 1)","title":"Precipitation","text":"","category":"section"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Support for months - list with SimpleSDMDatasets.months(RasterData{CHELSA1, Precipitation})","category":"page"},{"location":"usr/CHELSA1.html","page":"CHELSA (version 1)","title":"CHELSA (version 1)","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"index.html#SimpleSDMDatasets","page":"Index","title":"SimpleSDMDatasets","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"The purpose of this package is to get raster datasets for use in biogeography work, retrieve them from online locations, and store them in a central location to avoid data duplication. Datasets are downloaded upon request, and only the required files are downloaded.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"The package is built around two \"pillars\":","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"An interface based on traits, which specifies where the data live (remotely and locally), what the shape of the data is, and which keyword arguments are usable to query the data.\nA type system to identify which datasets are accessible through various providers, and which future scenarios are available.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"The combination of the interface and the type system means that adding a new dataset is relatively straightforward, and in particular that there is no need to write dataset-specific code to download the files (beyond specifying where the data live).","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"The purpose of the documentation is to (i) provide a high-level overview of how to get data from a user point of view, (ii) list the datasets that are accessible for users through the package alongside their most important features and (iii) give a comprehensive overview of the way the inteface works, to facilitate the addition of new data sources.","category":"page"},{"location":"dev/internals.html#What-happens-when-the-user-requests-a-dataset?","page":"How it fits together","title":"What happens when the user requests a dataset?","text":"","category":"section"},{"location":"dev/internals.html#The-downloader","page":"How it fits together","title":"The downloader","text":"","category":"section"},{"location":"dev/internals.html","page":"How it fits together","title":"How it fits together","text":"SimpleSDMDatasets.downloader","category":"page"},{"location":"dev/internals.html#The-keychecker","page":"How it fits together","title":"The keychecker","text":"","category":"section"},{"location":"dev/internals.html","page":"How it fits together","title":"How it fits together","text":"SimpleSDMDatasets.keychecker","category":"page"},{"location":"usr/EarthEnv.html#EarthEnv","page":"EarthEnv","title":"EarthEnv","text":"","category":"section"},{"location":"usr/EarthEnv.html#HabitatHeterogeneity","page":"EarthEnv","title":"HabitatHeterogeneity","text":"","category":"section"},{"location":"usr/EarthEnv.html","page":"EarthEnv","title":"EarthEnv","text":"Support for layers - list with SimpleSDMDatasets.layers(RasterData{EarthEnv, HabitatHeterogeneity})","category":"page"},{"location":"usr/EarthEnv.html","page":"EarthEnv","title":"EarthEnv","text":"Support for resolutions - list with SimpleSDMDatasets.resolutions(RasterData{EarthEnv, HabitatHeterogeneity})","category":"page"},{"location":"usr/EarthEnv.html","page":"EarthEnv","title":"EarthEnv","text":"Downloaded as _file, data stored as _tiff","category":"page"},{"location":"usr/EarthEnv.html#LandCover","page":"EarthEnv","title":"LandCover","text":"","category":"section"},{"location":"usr/EarthEnv.html","page":"EarthEnv","title":"EarthEnv","text":"Support for layers - list with SimpleSDMDatasets.layers(RasterData{EarthEnv, LandCover})","category":"page"},{"location":"usr/EarthEnv.html","page":"EarthEnv","title":"EarthEnv","text":"Downloaded as _file, data stored as _tiff","category":"page"}]
}
