var documenterSearchIndex = {"docs":
[{"location":"usr/getdata.html#Getting-data","page":"Retrieving data","title":"Getting data","text":"","category":"section"},{"location":"dev/interface.html#The-dataset-interface","page":"Interface","title":"The dataset interface","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"This page is meant for contributors to the package, and specifically provides information on the interface, what to overload, and why.","category":"page"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"","category":"page"},{"location":"dev/interface.html#Compatibility-between-datasets-and-providers","page":"Interface","title":"Compatibility between datasets and providers","text":"","category":"section"},{"location":"dev/interface.html","page":"Interface","title":"Interface","text":"SimpleSDMDatasets.provides","category":"page"},{"location":"dev/interface.html#SimpleSDMDatasets.provides","page":"Interface","title":"SimpleSDMDatasets.provides","text":"provides(::Type{P}, ::Type{D}) where {P <: RasterProvider, D <: RasterDataset}\n\nThis is the core function upon which the entire interface is built. Its purpose is to specify whether a specific dataset is provided by a specific provider. Note that this function takes two arguments, as opposed to a RasterData argument, because it is called in the inner constructor of RasterData: you cannot instantiate a RasterData with an incompatible provider/dataset combination.\n\nThe default value of this function is false, and to allow the use of a dataset with a provider, it is required to overload it for this specific pair so that it returns true.\n\n\n\n\n\nprovides(::R, ::F) where {R <: RasterData, F <: Future}\n\nThis method for provides specifies whether a RasterData combination has support for the value of the Future (a combination of a FutureScenario and a FutureModel) given as the second argument. Note that this function is not called as part of the Future constructor (because models and scenarios are messy and dataset dependent), but is still called when requesting data.\n\nThe default value of this function is false, and to allow the use of a future dataset with a given provider, it is required to overload it so that it returns true.\n\n\n\n\n\n","category":"function"},{"location":"dev/types.html#Type-system-for-datasets","page":"Type system","title":"Type system for datasets","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"","category":"page"},{"location":"dev/types.html#List-of-datasets","page":"Type system","title":"List of datasets","text":"","category":"section"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":" ```\n\n## List of providers\n\n## List of enumerated types\n","category":"page"},{"location":"dev/types.html","page":"Type system","title":"Type system","text":"@docs SimpleSDMDatasets.RasterDownloadType SimpleSDMDatasets.RasterFileType ```","category":"page"},{"location":"index.html#SimpleSDMDatasets","page":"Index","title":"SimpleSDMDatasets","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"The purpose of this package is to get raster datasets for use in biogeography work, retrieve them from online locations, and store them in a central location to avoid data duplication. Datasets are downloaded upon request, and only the required files are downloaded.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"The package is built around two \"pillars\":","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"An interface based on traits, which specifies where the data live (remotely and locally), what the shape of the data is, and which keyword arguments are usable to query the data.\nA type system to identify which datasets are accessible through various providers, and which future scenarios are available.","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"The combination of the interface and the type system means that adding a new dataset is relatively straightforward, and in particular that there is no need to write dataset-specific code to download the files (beyond specifying where the data live).","category":"page"},{"location":"index.html","page":"Index","title":"Index","text":"The purpose of the documentation is to (i) list the datasets that are accessible for users through the package and (ii) give a comprehensive overview of the way the inteface works, to facilitate the addition of new data sources.","category":"page"}]
}
